<apex:page standardController="Opportunity" extensions="BOCAemailUtility" showHeader="false" sidebar="false" applyHtmlTag="false" docType="html-5.0" standardStylesheets="false" >
    <html>
        <head>
            <meta charset="utf-8"/>
            <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
            
            <apex:includeScript value="//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.js"/>
            <apex:includeScript value="{!URLFOR($Resource.forceTK)}"/>
            <apex:includeScript value="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"/>
            
            <link rel="stylesheet" href="{!URLFOR($Resource.SF1Theme, 'dist/css/bootstrap.min.css')}"/>
            
            
            <apex:remoteObjects jsNamespace="Prog" >
                <apex:remoteObjectModel name="Program__c" jsShorthand="prog"  fields="name,Publish_BOCA__c,Form_Template__c,Resources__c">
                    <apex:remoteObjectField name="URL_Generator_Group__c" jsShorthand="urlGroup"/>
                    <apex:remoteObjectField name="Id" />
                </apex:remoteObjectModel>
                <apex:remoteObjectModel name="URL__c" jsShorthand="url" fields="URL_Group__c,Id" />
                <apex:remoteObjectModel name="Sales_Code__c" jsShorthand="extScode" fields="Name,Program__c" />
                <apex:remoteObjectModel name="Contact" jsShorthand="con" fields="FirstName, LastName, Email, Phone, Id">
                </apex:remoteObjectModel>
                <apex:remoteObjectModel name="WeFormObject__c" jsShorthand="weForm" fields="Name,RecordTypeId,Id,Signer_s_Email__c" >
                    <apex:remoteObjectField name="Program__c" jsShorthand="progR"/>
                    <apex:remoteObjectField name="Sales_Id__c" jsShorthand="sId"/>
                    <apex:remoteObjectField name="Signer_s_First_Name__c" jsShorthand="fName"/>
                    <apex:remoteObjectField name="Signer_s_Last_Name__c" jsShorthand="lName"/>
                    <apex:remoteObjectField name="status__c" jsShorthand="status"/>
                    <apex:remoteObjectField name="message__c" jsShorthand="msg"/>
                    <apex:remoteObjectField name="Promotional_Code__c" jsShorthand="cc"/>
                    <apex:remoteObjectField name="Opportunity__c" jsShorthand="opp"/>
                    <apex:remoteObjectField name="External_Sales_Id__c" jsShorthand="extId"/>
                </apex:remoteObjectModel>
                <apex:remoteObjectModel name="OpportunityContactRole" jsShorthand="oppContact" fields="OpportunityId, ContactId, IsPrimary, Id "/>
                <apex:remoteObjectModel name="Campaign" jsShorthand="camp" fields="Id,ParentId,Default_Program__c"/>
            </apex:remoteObjects>
            
            <script>
            var $j = jQuery.noConflict();
            //get the params from the url
            $j.urlParam = function(name){
                var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
                if (results==null){
                    return '';
                }
                else{
                    return results[1] || 0;
                }
            }
            var mProg = new Prog.prog();
            var oppCon = new Prog.oppContact();
            var primCon = new Prog.con();
            var camp = new Prog.camp();
            var url = new Prog.url();
            var progParam =  $j.urlParam("group");
            var oppId = $j.urlParam("id");
            var coupon = $j.urlParam("cc");
            var sfOne = typeof sforce;
            var session =  '{!$Api.Session_ID}';
            $j(document).ready(function(){
                var success = false;
                console.log('session ' + '{!$Api.Session_ID}' );
                $j("#success").css("display","none");
                $j("#extScodeDiv").css("display","none");
                
                
                $j('[id$=tempAttachment]').bind('keyup input paste', function() {
            		console.log($j(this).val());    
            	});
                
                
                //check to see if the user is outside of Salesforce
                //display external salescode data
                if(session == 'NULL_SESSION_ID'){
                    $j("#extScodeDiv").css("display","block");
                    $j("#salesInfo").css("display","none");
                    $j("#name").removeClass("reqData");
                    $j("#salesId").removeClass("reqData");
                    $j("#phone").removeClass("reqData");
                    $j("#extScodeInput").addClass("reqData");
                }
                console.log('ID ' + oppId);
                console.log('sfOne ' + sfOne);
                
                //check if being generated by button on Opportunity
                if(oppId != null && oppId != 'undefined' && oppId != ''){
                    
                    $j("#progName").val('{!Opportunity.Program_Name__c}');
                    $j('#progName').attr('data-role', '{!Opportunity.Campaign_Program__r.Program__c}')
                    $j("#cFName").attr("disabled", "true");
                    $j("#cLName").attr("disabled", true);
                    $j("#cEmail").attr("disabled", true);
                    $j("#progName").attr("disabled", true);
                    $j("#name").val('{!Opportunity.Owner.firstName}' + ' ' + '{!Opportunity.Owner.lastName}').attr("disabled", true);
                    $j("#phone").val('{!Opportunity.Owner.phone}').attr("disabled", true);
                    $j("#email").val('{!Opportunity.Owner.email}').attr("disabled", true);
                    $j("#salesId").val('{!Opportunity.Owner.sales_code__c}').attr("disabled", true);
                    $j("#cc").val('{!Opportunity.Coupon_Code2__c}');
                    checkData('{!Opportunity.Program_Name__c}');
                    
                    
                }
                
                console.log('prog ' + progParam);
                if(oppId == null || oppId == 'undefined' || oppId == ''){
                    
                    console.log('user ' + '{!$User.Username}');
                    $j("#name").val('{!$User.firstName}' + ' ' + '{!$User.lastName}').attr("disabled", true);
                    $j("#phone").val('{!$User.phone}').attr("disabled", true);
                    $j("#email").val('{!$User.email}').attr("disabled", true);
                    $j("#salesId").val('{!$User.sales_code__c}').attr("disabled", true);
                    
                    if(progParam != null && progParam != 'undefined' && progParam != ''){
                        
                        getData();
                        
                    }
                    
                    else{
                        $j("#groupSelect").css("display", "block");
                        var groupList = [];
                        groupList = JSON.parse('{!jsonList}');
                        $j.each(groupList, function(index, value){
                            $j("#groups").append("<li><a href='#' >"+value+"</a></li>");
                        })
                        $j("#groups li a").on("click", function(){
                            var g =  $j("#progGroup").val($j(this).text());
                            
                            progParam = g.val();
                            console.log('p ' + progParam);
                            $j("#programs li a").remove();
                            $j("#SalesCodes li a").remove();
                            $j("#extScodeInput").val('');
                            $j("#progName").val('');
                            $j("#cc").val(coupon);
                            getData();
                            
                        })
                        
                    }
                }
                

                
                function checkData(progName){
                    
                    mProg.retrieve(
                        { where:
                         { 
                             name: {eq: progName},
                             Publish_BOCA__c: {eq: false}
                             
                         },
                         limit: 1},
                        
                        function (err, records) {
                            if (err) {
                                console.log('error: ' + err);
                            } else {
                                $j.each(records, function () {
                                    //would like to also check if resources__c is populated but not sure about remote object capability to do this
                                    
                                    console.log('name ' + this.get('Name') + ' published ' + this.get('Publish_BOCA__c') );
                                    
                                    $j("#success").css("display", "block");
                                    var string="<p>Branding has not been created yet for the following Program: " +"<span style='color:red;'>" + this.get('Name') + "</span>"+". Please contact marketing to inquire about branding this Program.</p>";
                                    $j("#successMsg").html(string);
                                    $j("#back").css("display", "none");
                                    $j("#submit").attr("disabled",true);
                                    
                                    
                                })
                            }//end else
                        })//end retrieve
                    
                    getOppCon();
                    
                }//end checkData
                function getOppCon(){
                    //here get the campaign from the opp
                    camp.retrieve(
                    	{where:
                        {
                        	Id: {eq: "{!Opportunity.Campaign}"}
                        
                        }
                        },
                        function(err, records){
                        	if(err){
                            	console.log('error: ' + err);
                            }
                            else{
                            	$j.each(records, function(){
                                    //Get the parent campaign
                                	console.log('campaign ' + this.get('ParentId'));
                                    camp.retrieve(
                                    	{where:
                                        {
                                        	ParentId: {eq: this.get('ParentId')}
                                        }
                                        	
                                        },
                                        function(err, records){
                                        	if(err){
                                            	console.log('error: ' + err);
                                            }
                                            else{
                                            	$j.each(records, function(){
                                                    mProg.retrieve(
                                                    	{where:
                                                         {
                                                         	Id: {eq: this.get('Default_Program__c')}
                                                             //Publish_BOCA__c: {eq: true}
                                                         }
                                                         },
                                                        function(err, records){
                                                        	if(err){
                                                            	console.log('error: ' + err);
                                                            }
                                                            else{
                                                                //console.log('prog: ' + records.length);
                                                            	$j.each(records, function(){
                                                                	console.log('prog: ' + this.get('Name'));
                                                                })
                                                            }
                                                        }
                                                    )
                                                })
                                            }
                                        }
                                    
                                    )
                                    
                                })
                            }
                        }
                    
                    )
                    
                    oppCon.retrieve(
                        {where:
                         {
                             OpportunityId: {eq: "{!Opportunity.ID}"},
                             IsPrimary: {eq: true}
                             
                         },
                         limit: 1},
                        
                        function(err, records){
                            if(err){
                                console.log('error: ' + err);
                            }
                            else{
                                $j.each(records, function () {
                                    console.log('contact ' + this.get('ContactId'));
                                    primCon.retrieve(
                                        { where:
                                         {
                                             Id: {eq: this.get('ContactId')}
                                         },
                                         limit: 1
                                        },
                                        function(err, records){
                                            if(err){
                                                console.log('error: ' + err);
                                            }
                                            else{
                                                $j.each(records, function () {
                                                    console.log('oppCon ' + this.get('FirstName'));
                                                    $j("#cFName").val(this.get('FirstName'));
                                                    $j("#cLName").val(this.get('LastName'));
                                                    $j("#cEmail").val(this.get('Email'));
                                                })
                                                
                                            }//end else
                                            
                                            
                                        })//end retrieve
                                    
                                })
                            }//end else
                        })//end retrieve
                    
                    
                }
                function getData(){
                    
                    mProg.retrieve(
                        { where:
                         { 
                             urlGroup: {eq: progParam},
                             Publish_BOCA__c: {eq: true}
                         },
                         limit: 50},
                        
                        function (err, records) {
                            if (err) {
                                console.log('error: ' + err);
                            }
                            
                            else {
                                console.log('recs ' + records.length);
                                if(records.length == 0){
                                    mProg.retrieve(
                                        { where:
                                         { 
                                             Publish_BOCA__c: {eq: true}
                                         },
                                         limit: 25},
                                        function (err, records) {
                                            if (err) {
                                                console.log('error: ' + err);
                                            }
                                            else {
                                                $j.each(records, function () {
                                                    
                                                    console.log('programs ' + this.get('Name'));
                                                    $j("#progGroup").val('No available program groups');    
                                                    $j("#programs").append("<li><a href='#' data-role=" + '"' +this.get('Id') + '"' + ">"+this.get('Name')+"</a></li>");
                                                    
                                                }),//end each
                                                    $j("#programs li a").on("click", getExtCodes);
                                                
                                            }//end else
                                        })//end function
                                }//end retrieve
                                
                                
                                $j.each(records, function () {
                                    
                                    console.log('programs ' + this.get('Name'));
                                    
                                    $j("#programs").append("<li><a href='#' data-role=" + '"' +this.get('Id') + '"' + ">"+this.get('Name')+"</a></li>");
                                    
                                    
                                    
                                }),
                                    
                                    $j("#programs li a").on("click", getExtCodes);
                                
                                
                            }
                        })
                }
                
                function getExtCodes(){
                    $j("#progName").val($j(this).text());
                    //console.log($j(this).attr("data-role"));
                    $j("#progName").attr('data-role', $j(this).attr("data-role")); 
                    
                    if(session == 'NULL_SESSION_ID'){
                        //    $j("#extScodeDiv").css("display","block");
                        //    $j("#salesInfo").css("display","none");
                        var pId = $j("#progName").attr('data-role');
                        var ext = new Prog.extScode();
                        ext.retrieve(
                            { where:
                             {
                                 Program__c: {eq: pId}
                             },
                             limit: 50 },
                            
                            function(err, records){
                                if(err){
                                    console.log('error retrieving ext sales id ' + err);
                                }		
                                else{
                                    if(records.length == 0){
                                        $j("#extScodeInput").val('No available sales codes');
                                        
                                    }
                                    $j.each(records, function () {
                                        $j("#SalesCodes").append("<li><a href='#' data-role=" + '"' +this.get('Id') + '"' + ">"+this.get('Name')+"</a></li>");
                                    });
                                    $j("#SalesCodes li a").on("click", function(){
                                        $j("#extScodeInput").val($j(this).text());
                                        //console.log($j(this).attr("data-role"));
                                        $j("#extScodeInput").attr('data-role', $j(this).attr("data-role")); 
                                    })
                                }
                            })
                    }
                }
                
            })
            
            
            function validate(){
                var count = 0;
                $j(".reqData").each( function(){
                    
                    if($j(this).val() == '' || $j(this).val() == 'undefined'){
                        count++;
                        
                        console.log('err ' + count);
                        //   $j(this).after("<p class='err'>required</p>");
                        $j(this).attr('placeholder', 'required');
                        $j(this).addClass("err");
                        $j(this).on("focus", function(){
                            $j(this).removeClass("err");
                        });
                        
                    }
                    else{  
                        $j(this).removeClass("err");
                    }
                });
                
                // Validate the CC list..
                if($j("#ccEmail").val() !== "" || $j("#ccEmail").val() != null) {
                    var characterReg = /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i;
                    
                    if((($j("#ccEmail").val()).match(/@/g) || []).length > 0 && (($j("#ccEmail").val()).match(/,/g) || []).length != 0) { 
                    	var emailAddresses = ($j("#ccEmail").val()).split(",");

                    	for(var i = 0; i < emailAddresses.length; i++) {
                            emailAddresses[i] = (emailAddresses[i]).replace(/ /g,'');
                        	if(characterReg.test(emailAddresses[i])) {
	                            console.log("Success: " + emailAddresses[i]);
    	                    }
        	                else {
            	                console.log("Failure: " + emailAddresses[i]);
                                $j("#ccEmail").addClass("err").after("<div class='fieldErrorMessage'>Please ensure each e-mail address is valid and they are each seperated by a comma</div>").on("focus", function() { $j(this).removeClass("err").next(".fieldErrorMessage").remove() });
                                count++;
                	        }
                    	}
                   	}
                    else if((($j("#ccEmail").val()).match(/@/g) || []).length > 0 && (($j("#ccEmail").val()).match(/,/g) || []).length != ((($j("#ccEmail").val()).match(/@/g) || []).length - 1)) {
                        $j("#ccEmail").addClass("err").after("<div class='fieldErrorMessage'>Please ensure each e-mail address is valid and they are each seperated by a comma</div>").on("focus", function() { $j(this).removeClass("err").next(".fieldErrorMessage").remove() });
                        count++;
                    }
                }
                
                if(count == 0){
                    if(oppId != null && oppId != 'undefined' && oppId != ''){
                        createCon();
                    }
                    else{
                        createWe(primCon);
                    }
                }
                
            }
            
            
            function createCon(){
                var fName = $j("#cFName").val();
                var lName = $j("#cLName").val();
                var email = $j("#cEmail").val();
                //var oppId = $j.urlParam("id");
                var mess = '';
                //  if(oppId == null && oppId == 'undefined' || oppId == ''){
                var conDetail = {FirstName: fName, LastName: lName, Email: email};
                var con = new Prog.con();
                
                con.create(conDetail, function(err){
                    if(err){
                        console.log(err);        
                        $j("#success").css("display", "block");
                        $j("#postMess").text("Error processing data");
                        $j("#successMsg").text("There was an error processing your request: " +  err  );
                        $j("#back").css("display", "none");
                    }
                    else{
                        console.log(con.log());  
                        createWe(con);
                    }
                    
                }); 
                // }
                //   createWe('{!Opportunity.Billing_Contact__c}');
                
            }
            function createWe(con){
                var fName = $j("#cFName").val();
                var lName = $j("#cLName").val();
                var email = $j("#cEmail").val();
                var errMess = '';
                var weDetails = {lName: lName, fName: fName, Signer_s_Email__c: email, opp: '{!Opportunity.Id}', progR: $j('#progName').attr('data-role'), extId: $j("#extScodeInput").val(), sId:  $j("#salesId").val(), status: 'partial', msg: $j('#message').val(), cc: $j("#cc").val()};
                
                var fileAttachments = new Array();
                
                $j('[id$=attachments]').find('.attachment').each(function() {
                	fileAttachments.push($j(this).attr('data-attachment-id')); 
                });
                
                console.log(fileAttachments);
                
                var we = new Prog.weForm();
                we.create(weDetails, function(err){
                    if(err){
                        console.log(err);          
                        $j("#success").css("display", "block");
                        $j("#postMess").text("Error processing data");
                        $j("#successMsg").text("There was an error processing your request: " +  err  );
                        $j("#back").css("display", "none");
                    }
                    else{
                        console.log(we.log());
                        
                        Visualforce.remoting.Manager.invokeAction( 
                            '{!$RemoteAction.BOCAemailUtility.sendEmail}',
                            con.get('Id'),  $j("#name").val(), $j("#togglePG").is(":checked"), we.get('Id'), '{!Opportunity.Id}', $j("#ccEmail").val(), fileAttachments,
                            function(result, event){
                                if (event.status) {
                                    console.log('function ran');
                                    if('{!Opportunity.Opportunity_Number__c}' != ' '){
                                        $j("#weId").text('Opportunity number ' + '{!Opportunity.Opportunity_Number__c}');
                                    }
                                    success = true;
                                }
                            },
                            {escape: true}
                        );
                    }
                    
                }); 
                
                if(success){
                    
                    $j("#success").css("display", "block");
                    $j("#form").css("display", "none");
                    $j("#postMess").text("Success!");
                    $j("#successMsg").text("Your message was sent to "+ $j("#cFName").val() + ' ' + $j("#cLName").val());
                    //+ '. For your reference a partial application has been created with id: ' + $j("#weId").val()
                }
                else{
                    
                    $j("#success").css("display", "block");
                    $j("#form").css("display", "none");
                    $j("#postMess").text("Oops, there was a problem");
                    $j("#successMsg").text("There was an error processing your request: " + errMess  );
                    $j("#back").css("display", "block");
                    
                }
                function back(){
                    
                    location.reload();
                    
                }
                
                
                
            }
            
            function openAttachmentWindow(){
                var newWin=window.open('/apex/URLgenAttachmentLookup', 'PopUp','height=650,width=450,left=50,top=50,resizable=no,scrollbars=yes,toolbar=no,status=no,channelmode=yes');
    	        if (window.focus){
	                newWin.focus();
            	} 
            	return false;
        	}

            function removeAttachment(obj) {
                if(confirm('Remove Attachment?')) {
                	$j(obj).remove();
                }
            }
            
            </script>
            <style type="text/css">
                label, .btn{
                font-weight: normal;
                }
                .form-control{
                color: #3c3d3e;
                }
                .req:after{
                padding-right: 5px;
                content: "*";
                color:#b21522;
                }
                .err{
                color:#b21522;
                }
                select.err, input.err, textarea.err {
                border: 1px solid #b21522; 
                background: #fce1e0;
                color: #b21522;
                font-family:inherit;
                }
                .err::-webkit-input-placeholder{
                color: #b21522;
                font-family:inherit;
                }
                err:-ms-input-placeholder{
                color: #b21522;
                font-family:inherit;
                }
                .input-group .form-control:not(:first-child):not(:last-child), .input-group-addon:not(:first-child):not(:last-child), .input-group-btn:not(:first-child):not(:last-child){
                border-radius: 2px;
                }
                .input-group .form-control:last-child, .input-group-addon:last-child, .input-group-btn:first-child>.btn-group:not(:first-child)>.btn, .input-group-btn:first-child>.btn:not(:first-child), .input-group-btn:last-child>.btn, .input-group-btn:last-child>.btn-group>.btn, .input-group-btn:last-child>.dropdown-toggle{
                border-radius: 2px;
                }
                .progress-bar.animate {
                width: 100%;
                }
                
                .modal-backdrop {
                opacity: 0.5;
                }
                
                .modal-dialog {
                -webkit-transform: translate(0px, 50%);
                transform: translate(0px, 50%);
                }
                
                .progress-popup {
                margin-bottom: 0;
                }
                
                .fieldErrorMessage { 
				margin-top: -6px; 
				line-height: 2px; 
				display: block; 
				padding-bottom: 16px; 
				color: #a94442; 
				font-size: 11px; 
				padding-left: 3px;  
				}
                
                .attachment {
                	border: 1px solid #bbc0c4; 
                	background: #fff; 
                	border-radius: 5px; 
                	padding: 4px 8px 4px 8px;  
                	font-size: 14px; 
                	color: #707d95; 
                	vertical-align: middle; 
                	text-align: center;
                	float: left;
                	margin: 0 20px 10px 20px;
                	cursor: pointer;
                }
                
                .attachment:first-child {
                	margin: 0 20px 10px 0;
                }
                
                .attachment:hover {
                	cursor: pointer;
                	background: #f77e75;
                	color: #f1f1f1;
                }
                
				.attachButton {
                	border: 1px solid #bbc0c4; 
                	background: #fff; 
                	border-radius: 5px; 
                	padding: 4px; 
                	width: 140px; 
                	font-size: 14px; 
                	color: #707d95; 
                	vertical-align: middle; 
                	text-align: center;
                	cursor: pointer;
                	margin-top: -10px;
                	margin-bottom: 20px; 
                }
                
                .attachButton:hover {
                	background: #e6e6e6;
                }
                
                .clearfix:after {
					visibility: hidden;
					display: block;
					font-size: 0;
					content: " ";
					clear: both;
					height: 0;
				}
				.clearfix { display: inline-block; }
				/* start commented backslash hack \*/
				* html .clearfix { height: 1%; }
				.clearfix { display: block; }
				/* close commented backslash hack */
            </style>
        </head>
        <body>
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <section class="section" style="margin-bottom: 10px">
                            <nav class="nav">
                                <h1 >
                                    Custom URL Generator
                                    <span  id="info" class="s1icon s1icon-s-question-feed" style="float:right;width:20px;height:20px;"></span> </h1></nav>
                        </section>
                    </div>
                    <div class="col-md-9">
                        
                        <div class="well hidden" id="infoWell">
                            <ul class="list-group">
                                <li class="list-group-item" id="notSFone">To query for a specific Program group append "?group=yourProgramGroup" to the url.</li>
                                <li class="list-group-item" id="SFone">With no parameter in the URL the groups will be displayed as a dropdown.</li>
                                <li class="list-group-item">For external sales reps pick your program and then pick your external sales id.</li>
                                <li class="list-group-item">Optionally add the coupon code for the program. </li>
                                <li class="list-group-item">Custom messages will be included in your email to the customer.</li>
                                
                            </ul>
                        </div>
                    </div>
                    
                    <div class="col-md-9">
                        <div class="modal js-loading-bar">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-body">
                                        <div class="progress progress-popup">
                                            <div class="progress-bar progress-bar-info" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" >Working</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="success" >
                            <div class="col-md-9">
                                <section class="section">
                                    <h2 class="section-head" id="postMess">
                                        
                                    </h2>
                                    <div class="well well-lg" >
                                        <p id="successMsg"></p>
                                        <p id="weId"></p>
                                    </div>      
                                    <button type="button" id="back" class="btn btn-default" href="#"  style="font-weight:normal" onclick="location.reload();">
                                        <span data-bind="label">Back</span> 
                                    </button>    
                                </section>
                                
                            </div>
                        </div>
                        
                        <div id="form">
                            
                            <section class="section">
                                <h2 class="section-head">
                                    Program Information
                                </h2>
                                <div class="dropdown" id="groupSelect" style="display: none;">
                                    <label for="progG" class="col-md-3 control-label req">Program Group</label>
                                    <div class="col-md-9 input-group">
                                        <span class="input-group-btn">
                                            <span class="s1icon s1icon-c-redcross"></span></span>
                                        <button type="button" id="progG" class="btn btn-default" href="#" data-toggle="dropdown" style="font-weight:normal">
                                            <span data-bind="label">Select</span> 
                                            <b class="caret"></b></button>
                                        <input id="progGroup" type="text" label="group" class="form-control" placeholder="group" />                            
                                        <br/>
                                        <ul id="groups" class="dropdown-menu" role="menu" >
                                            
                                        </ul>
                                        
                                    </div>
                                </div><!---end dropdown div--->
                                <div class="dropdown">
                                    <label for="progB" class="col-md-3 control-label req">Program Name</label>
                                    <div class="col-md-9 input-group">
                                        <span class="input-group-btn">
                                            <span class="s1icon s1icon-s-campaign"></span></span>
                                        <button type="button" id="progB" class="btn btn-default" href="#" data-toggle="dropdown" style="font-weight:normal">
                                            <span data-bind="label">Select</span> 
                                            <b class="caret"></b></button>
                                        <input id="progName" type="text" label="program" class="form-control reqData" placeholder="program" />                            
                                        <br/>
                                        <ul id="programs" class="dropdown-menu" role="menu" >
                                            
                                        </ul>
                                        
                                    </div>
                                </div><!---end dropdown div--->
                                
                                <div class="dropdown" id="extScodeDiv">
                                    <label for="progB" class="col-md-3 control-label req">Sales Code</label>
                                    <div class="col-md-9 input-group">
                                        <span class="input-group-btn">
                                            <span class="s1icon s1icon-s-case-transcript"></span></span>
                                        <button type="button" id="extScodeButton" class="btn btn-default" href="#" data-toggle="dropdown" style="font-weight:normal">
                                            <span data-bind="label">Select</span> 
                                            <b class="caret"></b></button>
                                        <input id="extScodeInput" type="text" label="program" class="form-control" placeholder="Sales Code" />                            
                                        <br/>
                                        <ul id="SalesCodes" class="dropdown-menu" role="menu" >
                                            
                                        </ul>
                                        
                                    </div>
                                </div><!---end External SalesCode dropdown div--->          
                                            <div class="col-md-9 input-group checkbox" >
                                    <label><input type="checkbox" id="togglePG"/>Turn Off PG on conditional templates</label>
                                </div>   
                                <label for="cc" class="col-md-3 control-label">Coupon Code</label>
                                <div class="col-md-9 input-group">
                                    <span class="input-group-btn">
                                        <span class="s1icon s1icon-s-quotes"></span></span>
                                    <input id="cc" type="text" class="form-control" placeholder="coupon code"/>
                                </div>
                                
                            </section>
                            <div id="salesInfo">
                                <section class="section">
                                    <h2 class="section-head">
                                        Sales Person Information
                                    </h2>
                                    
                                    <label for="name" class="col-md-3 control-label req">Name</label>
                                    <div class="col-md-9 input-group">
                                        <span class="input-group-btn">
                                            <span class="s1icon s1icon-c-people"></span></span>
                                        <input id='name' type="text" label="Name" class="form-control reqData" placeholder="Name" />
                                    </div>
                                    
                                    
                                    <label for="salesId" class="col-md-3 control-label req">Sales ID</label>
                                    <div class="col-md-9 input-group">
                                        <span class="input-group-btn">
                                            <span class="s1icon s1icon-s-transcript"></span></span>
                                        <input id='salesId' type="text" label="Sales ID" class="form-control reqData" placeholder="Sales ID" />
                                    </div>
                                    
                                    <label for="phone" class="col-md-3 control-label req">Phone</label>
                                    <div class="col-md-9 input-group">
                                        <span class="input-group-btn">
                                            <span class="s1icon s1icon-c-smartphone"></span></span>
                                        <input id='phone' type="text" label="Phone" class="form-control reqData" placeholder="Phone" />
                                    </div>
                                    
                                    <label for="email" class="col-md-3 control-label">Email</label>
                                    <div class="col-md-9 input-group">
                                        <span class="input-group-btn">
                                            <span class="s1icon s1icon-c-envelope"></span></span>
                                        <input id='email' type="text" class="form-control" placeholder="Email"/>
                                    </div>
                                    
                                    
                                    
                                </section>
                                
                            </div>
                            <section class="section">
                                <h2 class="section-head">
                                    Customer Information
                                </h2>
                                
                                <label for="cFName" class="col-md-3 control-label req">Customer First Name</label>
                                <div class="col-md-9 input-group">
                                    <span class="input-group-btn">
                                        <span class="s1icon s1icon-c-people"></span></span>
                                    <input id='cFName' type="text" label="First Name" class="form-control reqData" placeholder="First Name" /> 
                                </div>
                                <label for="cLName" class="col-md-3 control-label req">Customer Last Name</label>
                                <div class="col-md-9 input-group">
                                    <span class="input-group-btn">
                                        <span class="s1icon s1icon-c-people"></span></span>
                                    <input id='cLName' type="text" label="Last Name" class="form-control reqData" placeholder="Last Name" /> 
                                </div>
                                <label for="cEmail" class="col-md-3 control-label req">Customer Email</label>
                                <div class="col-md-9 input-group">
                                    <span class="input-group-btn">
                                        <span class="s1icon s1icon-c-envelope"></span></span>
                                    <input id='cEmail' type="text" label="Email" class="form-control reqData" placeholder="Email" />
                                </div>
                                <label for="message" class="col-md-3 control-label">Custom Message</label>
                                <div class="col-md-9 input-group">
                                    <span class="input-group-btn">
                                        <span class="s1icon s1icon-s-note"></span></span>
                                    <textarea class="form-control" rows="4" id="message"></textarea>
                                </div>
                            </section>
                            
                            <section class="section">
                            	<h2 class="section-head">
									Additional Recipients
                                </h2>
								<label for="ccEmail" class="col-md-3 control-label">Additional Recipients</label>
                                <div class="col-md-9 input-group">
                                    <span class="input-group-btn">
                                        <span class="s1icon s1icon-c-envelope"></span></span>
                                    <textarea class="form-control" rows="2" id="ccEmail" placeholder="Additional recipient e-mail addresses seperated by a comma"></textarea>
                                </div>
                            </section>
                            
                            <section class="section">
                            	<h2 class="section-head">
									Attachments
                                </h2>
                                <div class="attachButton" onclick="openAttachmentWindow();">
                                   	<span class="s1utility s1utility-add" style="font-size: 12px;"></span> Add Attachment    
                                </div>
                                <div id="attachments" class="clearfix">
                                    
                                </div>
                            </section>
                            
                            <section class="section">
                                <h2 class="section-head">
                                    Send Customer Email
                                </h2>
                                <button type="button" id="submit" class="btn btn-default" href="#" style="font-weight:normal" onclick="validate()">
                                    <span data-bind="label">Submit</span> 
                                </button>                                 
                            </section>
                            
                            
                            
                        </div><!---end main col--->
                    </div><!--end row1--->
                </div>
                
            </div><!---end container-->
        </body>
        <script>
        var $j = jQuery.noConflict();
        // Setup progress bar
        $j('.js-loading-bar').modal({
            backdrop: 'static',
            show: false
        }).on('shown.bs.modal', function( event ) {
            
            var bar = $j(event.target).find('.progress-bar'),
                _wait = function() {       
                    setTimeout(function() {
                        if ( bar.is(':visible')) { 
                            bar.addClass('animate');
                        } else {
                            console.log('not ready'); 
                            _wait();
                        }
                    }, 0);       
                };
            
            _wait();
            
        });
        $j('#info').click(function(){
            $j('#infoWell').toggleClass('hidden show')
            
        })
        $j('#submit').click(function() {
            var modal = $j('.js-loading-bar'),
                bar = modal.find('.progress-bar');
            
            modal.modal('show');
            
            setTimeout(function() {
                modal.modal('hide'); 
                bar.removeClass('animate');
                //$modal.modal('hide');        
            }, 3500);
        });
        </script>
    </html>
</apex:page>