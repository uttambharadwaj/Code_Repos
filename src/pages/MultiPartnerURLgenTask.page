<apex:page standardController="Task" extensions="BOCAtaskController"  action="{!getOpp}" showHeader="false" sidebar="false" applyHtmlTag="false" docType="html-5.0" standardStylesheets="false" >
    <html>
        <head>
            <meta charset="utf-8"/>
            <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
            
            <apex:includeScript value="//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.js"/>
            <apex:includeScript value="{!URLFOR($Resource.forceTK)}"/>
            <apex:includeScript value="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"/>
            
            <link rel="stylesheet" href="{!URLFOR($Resource.SF1Theme, 'dist/css/bootstrap.min.css')}"/>
            
            <apex:remoteObjects jsNamespace="Prog" >
                <apex:remoteObjectModel name="Program__c" jsShorthand="prog"  fields="name,Publish_BOCA__c,Form_Template__c,Resources__c,BOCA_Sell_Sheet__c,Brand_Short_Name__c">
                    <apex:remoteObjectField name="URL_Generator_Group__c" jsShorthand="urlGroup"/>
                    <apex:remoteObjectField name="Id" />
                </apex:remoteObjectModel>
                <apex:remoteObjectModel name="Contact" jsShorthand="con" fields="FirstName, LastName, Email, Phone, Id">
                </apex:remoteObjectModel>
                <apex:remoteObjectModel name="WeFormObject__c" jsShorthand="weForm" fields="Name,RecordTypeId,Id,Signer_s_Email__c" >
                    <apex:remoteObjectField name="Program__c" jsShorthand="progR"/>
                    <apex:remoteObjectField name="Sales_Id__c" jsShorthand="sId"/>
                    <apex:remoteObjectField name="togglePG__c" jsShorthand="togglePG"/>
                    <apex:remoteObjectField name="Signer_s_First_Name__c" jsShorthand="fName"/>
                    <apex:remoteObjectField name="Signer_s_Last_Name__c" jsShorthand="lName"/>
                    <apex:remoteObjectField name="status__c" jsShorthand="status"/>
                    <apex:remoteObjectField name="message__c" jsShorthand="msg"/>
                    <apex:remoteObjectField name="Promotional_Code__c" jsShorthand="cc"/>
                    <apex:remoteObjectField name="Opportunity__c" jsShorthand="oppty"/>
                    <apex:remoteObjectField name="External_Sales_Id__c" jsShorthand="extId"/>
                </apex:remoteObjectModel>
                <apex:remoteObjectModel name="OpportunityContactRole" jsShorthand="oppContact" fields="OpportunityId, ContactId, IsPrimary, Id "/>
                <apex:remoteObjectModel name="Campaign" jsShorthand="camp" fields="Id,ParentId,Default_Program__c,Name"/>
                <apex:remoteObjectModel name="Campaign_Program__c" jsShorthand="cp" fields="Id,Name,Program__c,Campaign__c,Default__c"/>
            </apex:remoteObjects>
            <script>
            var $j = jQuery.noConflict();
            //get the params from the url
            $j.urlParam = function(name){
                var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
                if (results==null){
                    return '';
                }
                else{
                    return results[1] || 0;
                }
            }
            var mProg = new Prog.prog();
            var oppCon = new Prog.oppContact();
            var primCon = new Prog.con();
            var camp = new Prog.camp();
            var cmpProg = new Prog.cp();
            var progParam =  $j.urlParam("group");
            var oppId = $j.urlParam("id");
            var coupon = $j.urlParam("cc");
            var sfOne = typeof sforce;
            var session =  '{!$Api.Session_ID}';
            var limitVal = 20;
            var offsetVal = 1;
            var total = limitVal;
            
            
            
            
            $j(document).ready(function(){
                var success = false;
                console.log('session ' + '{!$Api.Session_ID}' );
                $j("#success").css("display","none");
                $j("#extScodeDiv").css("display","none");
                
                console.log('ID ' + oppId);
                console.log('sfOne ' + sfOne);
                //check if being generated by button on Opportunity
                
                
                $j("#progName").val('{!Opp.Program_Name__c}');
                $j('#progName').attr('data-role', '{!prg.id}')
                $j("#cFName").attr("disabled", "true");
                $j("#cLName").attr("disabled", true);
                $j("#cEmail").attr("disabled", true);
                $j("#progName").attr("disabled", true);
                $j("#name").val('{!usr.firstName}' + ' ' + '{!usr.lastName}').attr("disabled", true);
                $j("#phone").val('{!usr.phone}').attr("disabled", true);
                $j("#email").val('{!usr.email}').attr("disabled", true);
                $j("#salesId").val('{!usr.Sales_Code__c}').attr("disabled", true);
                $j("#cc").val('{!Opp.Coupon_Code2__c}');
                checkData('{!Opp.Program_Name__c}');
                
                
                console.log('prog ' + '{!Opp.Program_Name__c}' + 'Id' + '{!Opp.Program_ID__c}');
                if(progParam != null && progParam != 'undefined' && progParam != ''){
                    
                    getData();
                    
                }
                
                function checkData(progName){
                    
                    mProg.retrieve(
                        { where:
                         { 
                             name: {eq: progName},
                             Publish_BOCA__c: {eq: false}
                             
                         },
                         limit: 1},
                        
                        function (err, records) {
                            if (err) {
                                console.log('error: ' + err);
                            } else {
                             if(records.length == 0){ getOppCon();}
                                $j.each(records, function () {
                                    //would like to also check if resources__c is populated but not sure about remote object capability to do this
                                    
                                    console.log('name ' + this.get('Name') + ' published ' + this.get('Publish_BOCA__c') );
                                    
                                    $j("#success").css("display", "block");
                                    var string="<p>Branding has not been created yet for the following Program: " +"<span style='color:red;'>" + this.get('Name') + "</span>"+". Please contact marketing to inquire about branding this Program.</p>";
                                    $j("#successMsg").html(string);
                                    $j("#back").css("display", "none");
                                    $j("#submit").attr("disabled",true);
                                    
                                    
                                })
                            }//end else
                        })//end retrieve
                    
                 //   getOppCon();
                    
                }//end checkData
                function getOppCon(){
                    var pName = 'test';
                    var modal = $j('.js-loading-bar'),
                        bar = modal.find('.progress-bar');
                    modal.modal('show');
                    
                    
                    var recs = 0;
                    var count = 0; 
                    
                    
                    //here get the campaign from the opp
                    cmpProg.retrieve(
                        
                        
                        {where:
                         {
                             Id: {eq: "{!Opp.Campaign_Program__c}"}
                             
                         }
                        },
                        function(err, records){
                            if(err){
                                console.log('error: ' + err);
                            }
                            else{
                                $j.each(records, function(){
                                    //Get the campaigns that share this parent
                                    console.log('campaign ' + this.get('Name'));
                                    console.log('campaign parent' + this.get('ParentId'));
                                    camp.retrieve(
                                        {where:
                                         {
                                             Id: {eq: this.get('Campaign__c')}
                                         }
                                         
                                        },
                                        function(err, records){
                                            if(err){
                                                console.log('error: ' + err);
                                            }
                                            else{
                                                
                                                $j.each(records, function(){
                                                    console.log('camps: ' + this.get('Name'));
                                                    //here get all campaign programs for the campaigns
                                                    cmpProg.retrieve(
                                                        {where:
                                                         {
                                                             Campaign__c: {eq: this.get('Id')}
                                                             
                                                         }
                                                        },
                                                        function(err, records){
                                                            if(err){
                                                                console.log('error: ' + err);
                                                            }
                                                            else{
                                                                //console.log('prog: ' + records.length);
                                                                $j.each(records, function(){
                                                                    console.log('camp prog: ' + this.get('Name'));
                                                                    mProg.retrieve(
                                                                        {where:
                                                                         {
                                                                             Id: {eq: this.get('Program__c')},
                                                                              Publish_BOCA__c: {eq: true}
                                                                         }
                                                                        },
                                                                        function(err, records){
                                                                            if(err){
                                                                                console.log('error: ' + err);
                                                                                
                                                                            }
                                                                            else{
                                                                                
                                                                                recs+= records.length;
                                                                                $j.each(records, function(){
                                                                                    count++;
                                                                                    
                                                                                    console.log('programs ' + this.get('Name') + '  '+ pName );
                                                                                    // offsetVal += records.length;
                                                                                    if(this.get('Name') != pName){
                                                                                        $j("#prog1").append("<a href='#' class='list-group-item progs2' data-name="+ '"' + this.get('Brand_Short_Name__c') + '"' + " data-role=" + '"' +this.get('Id') + '"' + "data-temp="+ '"'+this.get('Form_Template__c') +'"'+ "data-sell="+  '"'+this.get('BOCA_Sell_Sheet__c') + '">'+this.get('Name') + "<input class='pull-right' type='checkbox'/></a>");
                                                                                    }
                                                                                    pName = this.get('Name');
                                                                                    //once done loading results, order the results asc by name
                                                                                    if(count == recs){
                                                                                        
                                                                                        sortDiv();
                                                                                        modal.modal('hide'); 
                                                                                        bar.removeClass('animate');
                                                                                        
                                                                                    }
                                                                                    
                                                                                })
                                                                                
                                                                            }
                                                                            
                                                                        }
                                                                    )
                                                                    
                                                                })
                                                            }
                                                        }
                                                    )
                                                })
                                            }
                                        }
                                        
                                    )
                                    
                                })
                            }
                        }
                        
                    )
                    
                    
                    oppCon.retrieve(
                        {where:
                         {
                             OpportunityId: {eq: "{!Opp.Id}"},
                             IsPrimary: {eq: true}
                             
                         },
                         limit: 1},
                        
                        function(err, records){
                            if(err){
                                console.log('error: ' + err);
                            }
                            else{
                                $j.each(records, function () {
                                    console.log('contact ' + this.get('ContactId'));
                                    primCon.retrieve(
                                        { where:
                                         {
                                             Id: {eq: this.get('ContactId')}
                                         },
                                         limit: 1
                                        },
                                        function(err, records){
                                            if(err){
                                                console.log('error: ' + err);
                                            }
                                            else{
                                                $j.each(records, function () {
                                                    console.log('oppCon ' + this.get('FirstName'));
                                                    $j("#cFName").val(this.get('FirstName'));
                                                    $j("#cLName").val(this.get('LastName'));
                                                    $j("#cEmail").val(this.get('Email'));
                                                })
                                                
                                            }//end else
                                            
                                            
                                        })//end retrieve
                                    
                                })
                            }//end else
                        })//end retrieve
                    
                    
                }
                
                
            })
            function validate(){
                var count = 0;
                if($j('#prog2 > a.list-group-item.progs2').length == 0){
                    count++;
                    $j("#success").css("display", "block");
                    var string="<p><span style='color:red;'>You must select at least one program!</p>";
                    $j("#successMsg").html(string);
                    $j("#back").css("display", "none");
                }
                $j(".reqData").each( function(){
                    
                    if($j(this).val() == '' || $j(this).val() == 'undefined'){
                        count++;
                        
                        console.log('err ' + count);
                        //   $j(this).after("<p class='err'>required</p>");
                        $j(this).attr('placeholder', 'required');
                        $j(this).addClass("err");
                        $j(this).on("focus", function(){
                            $j(this).removeClass("err");
                        });
                        
                    }
                    else{  
                        $j(this).removeClass("err");
                    }
                })
                if(count == 0){
                    
                    createCon();
                    
                }
                
            }
            function createCon(){
                var fName = $j("#cFName").val();
                var lName = $j("#cLName").val();
                var email = $j("#cEmail").val();
                
                var mess = '';
                
                var conDetail = {FirstName: fName, LastName: lName, Email: email};
                var con = new Prog.con();
                
                con.create(conDetail, function(err){
                    if(err){
                        console.log(err);        
                        $j("#success").css("display", "block");
                        $j("#postMess").text("Error processing data");
                        $j("#successMsg").text("There was an error processing your request: " +  err  );
                        $j("#back").css("display", "none");
                    }
                    else{
                        console.log(con.log());  
                        createWe(con);
                    }
                    
                }); 
                
                
            }
            function createWe(con){
                var fName = $j("#cFName").val();
                var lName = $j("#cLName").val();
                var email = $j("#cEmail").val();
                var errMess = '';
                var weDetails = {lName: lName, fName: fName, Signer_s_Email__c: email, oppty: '{!Opp.ID}', progR: $j('#prog2 > a.list-group-item.progs2').attr('data-role'), extId: $j("#extScodeInput").val(), sId:  $j("#salesId").val(), status: 'partial', msg: $j('#message').val(), cc: $j("#cc").val()};
                
                
                var progList = $j('#prog2 > a.list-group-item.progs2');
                var urlList = [];
                var sellSheets = [];
                var names = [];
                progList.each(function(i, a){
                    var item = $j(a);
                    urlList.push(item.attr('data-temp') +'?pgm=' + item.attr('data-name'));
                    sellSheets.push(item.attr('data-sell'));
                    names.push(item.text());
                })
                
                
                
                console.log('pg ' + $j("#togglePG").is(":checked"));
                
                var we = new Prog.weForm();
                we.create(weDetails, function(err){
                    if(err){
                        console.log(err);          
                        $j("#success").css("display", "block");
                        $j("#postMess").text("Error processing data");
                        $j("#successMsg").text("There was an error processing your request: " +  err  );
                        $j("#back").css("display", "none");
                    }
                    else{
                        console.log(we.log());
                        
                        Visualforce.remoting.Manager.invokeAction( 
                            '{!$RemoteAction.BOCAtaskController.sendEmailMulti}',
                            con.get('Id'),  $j("#name").val(),sellSheets, urlList, names, $j("#togglePG").is(":checked") ,we.get('Id'), '{!Opp.ID}',
                            function(result, event){
                            if (event.status) {
                                console.log('function ran');
                                if('{!Opp.Opportunity_Number__c}' != ' '){
                                    $j("#weId").text('Opportunity number ' + '{!Opp.Opportunity_Number__c}');
                                }
                                success = true;
                            }
                        },
                            {escape: true}
                        );
                    }
                    
                }); 
                
                if(success){
                    
                    $j("#success").css("display", "block");
                    $j("#form").css("display", "none");
                    $j("#postMess").text("Success!");
                    $j("#successMsg").text("Your message was sent to "+ $j("#cFName").val() + ' ' + $j("#cLName").val());
                    //+ '. For your reference a partial application has been created with id: ' + $j("#weId").val()
                }
                else{
                    
                    $j("#success").css("display", "block");
                    $j("#form").css("display", "none");
                    $j("#postMess").text("Oops, there was a problem");
                    $j("#successMsg").text("There was an error processing your request: " + errMess  );
                    $j("#back").css("display", "block");
                    
                }
                function back(){
                    
                    location.reload();
                    
                }
                
                
                
                
            }
            function sortDiv(){
                
                var $jsort = $j("div.prog1");
                
                var $jsortProg = $jsort.children("a.progs");
                
                $jsortProg.sort(function(a,b){
                    
                    var aName = a.getAttribute('data-name') ;
                    var bName = b.getAttribute('data-name') ;
                    // console.log('in sort a ' + aName);
                    // console.log('in sort b ' + bName);
                    
                    if(aName > bName){
                        return 1;
                    }
                    if(aName < bName){
                        return -1;
                    }
                    
                    return 0;
                });
                
                $jsortProg.detach().appendTo($jsort);
            }
            
            </script>
            <style type="text/css">
                label, .btn{
                font-weight: normal;
                }
                .form-control{
                color: #3c3d3e;
                }
                .req:after{
                padding-right: 5px;
                content: "*";
                color:#b21522;
                }
                .err{
                color:#b21522;
                }
                select.err, input.err {
                border: 1px solid #b21522; 
                background: #fce1e0;
                color: #b21522;
                font-family:inherit;
                }
                .err::-webkit-input-placeholder{
                color: #b21522;
                font-family:inherit;
                }
                err:-ms-input-placeholder{
                color: #b21522;
                font-family:inherit;
                }
                .input-group .form-control:not(:first-child):not(:last-child), .input-group-addon:not(:first-child):not(:last-child), .input-group-btn:not(:first-child):not(:last-child){
                border-radius: 2px;
                }
                .input-group .form-control:last-child, .input-group-addon:last-child, .input-group-btn:first-child>.btn-group:not(:first-child)>.btn, .input-group-btn:first-child>.btn:not(:first-child), .input-group-btn:last-child>.btn, .input-group-btn:last-child>.btn-group>.btn, .input-group-btn:last-child>.dropdown-toggle{
                border-radius: 2px;
                }
                .progress-bar.animate {
                width: 100%;
                }
                
                .modal-backdrop {
                opacity: 0.5;
                }
                
                .modal-dialog {
                -webkit-transform: translate(0px, 50%);
                transform: translate(0px, 50%);
                }
                
                .progress-popup {
                margin-bottom: 0;
                }
                .v-center {
                min-height:200px;
                display: flex;
                justify-content:center;
                flex-flow: column wrap;
                }
                .scrollable-menu {
                height: auto;
                max-height: 200px;
                overflow-x: hidden;
                }
                .list-group-item.active, .list-group-item.active:hover{
                background-color:#7A8F8D;
                border-color:#7A8F8D;
                }
                .pRow{
                margin-bottom:30px;
                }
            </style>
        </head>
        <body>
            
            <apex:outputText value="{!task.Opportunity_ID__c}" rendered="false"></apex:outputText>
            
            
            
            
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <section class="section" style="margin-bottom: 10px">
                            <nav class="nav">
                                <h1 >
                                    Custom URL Generator
                                    <span  id="info" class="s1icon s1icon-s-question-feed" style="float:right;width:20px;height:20px;"></span> </h1></nav>
                        </section>
                    </div>
                    <div class="col-md-9">
                        
                        <div class="well hidden" id="infoWell">
                            <ul class="list-group">
                                <li class="list-group-item" id="notSFone">To query for a specific Program group append "?group=yourProgramGroup" to the url.</li>
                                <li class="list-group-item" id="SFone">With no parameter in the URL the groups will be displayed as a dropdown.</li>
                                <li class="list-group-item">For external sales reps pick your program and then pick your external sales id.</li>
                                <li class="list-group-item">Optionally add the coupon code for the program. </li>
                                <li class="list-group-item">Custom messages will be included in your email to the customer.</li>
                                
                            </ul>
                        </div>
                    </div>
                    
                    <div class="col-md-9">
                        <div class="modal js-loading-bar">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-body">
                                        <div class="progress progress-popup">
                                            <div class="progress-bar progress-bar-info" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" >Working</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="success" >
                            <div class="col-md-9">
                                <section class="section">
                                    <h2 class="section-head" id="postMess">
                                        
                                    </h2>
                                    <div class="well well-lg" >
                                        <p id="successMsg"></p>
                                        <p id="weId"></p>
                                    </div>      
                                    <button type="button" id="back" class="btn btn-default" href="#"  style="font-weight:normal" onclick="location.reload();">
                                        <span data-bind="label">Back</span> 
                                    </button>    
                                </section>
                                
                            </div>
                        </div>
                        
                        <div id="form">
                            
                            <section class="section">
                                <h2 class="section-head">
                                    Program Information
                                </h2>
                                
                                <div class="row pRow">
                                    <div class="col-md-12 text-center">
                                        <h3>Program Offers</h3>
                                        <h4 class="parent"></h4>
                                    </div>
                                    <div class="col-sm-4 col-sm-offset-1">
                                        <div class="list-group scrollable-menu prog1" id="prog1">  
                                            <a href="#" class="list-group-item active" >Add All Programs<input title="toggle all" class="all pull-right" type="checkbox"/></a>          
                                            
                                        </div>
                                    </div>
                                    <div class="col-sm-2 v-center">
                                        <button title="to list 2" class="btn btn-default center-block add"><i class="s1utility s1utility-chevronright" style="color:#6AD200;"></i></button>
                                        <button title="to list 1" class="btn btn-default center-block remove"><i class="s1utility s1utility-chevronleft" style="color:#E02869;"></i></button>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="list-group scrollable-menu" id="prog2">
                                            <a href="#" class="list-group-item active">Remove All Programs<input title="toggle all" class="all pull-right" type="checkbox"/></a> 
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="dropdown" id="extScodeDiv">
                                    <label for="progB" class="col-md-3 control-label req">Sales Code</label>
                                    <div class="col-md-9 input-group">
                                        <span class="input-group-btn">
                                            <span class="s1icon s1icon-s-case-transcript"></span></span>
                                        <button type="button" id="extScodeButton" class="btn btn-default" href="#" data-toggle="dropdown" style="font-weight:normal">
                                            <span data-bind="label">Select</span> 
                                            <b class="caret"></b></button>
                                        <input id="extScodeInput" type="text" label="program" class="form-control" placeholder="Sales Code" />                            
                                        <br/>
                                        <ul id="SalesCodes" class="dropdown-menu" role="menu" >
                                            
                                        </ul>
                                        
                                    </div>
                                </div><!---end External SalesCode dropdown div--->      
                                <div class="col-md-9 input-group checkbox" >
                                    <label><input type="checkbox" id="togglePG"/>Turn Off PG on conditional templates</label>
                                </div>    
                                
                                <label for="cc" class="col-md-3 control-label">Coupon Code</label>
                                <div class="col-md-9 input-group">
                                    <span class="input-group-btn">
                                        <span class="s1icon s1icon-s-quotes"></span></span>
                                    <input id="cc" type="text" class="form-control" placeholder="coupon code"/>
                                </div>
                                
                            </section>
                            <div id="salesInfo">
                                <section class="section">
                                    <h2 class="section-head">
                                        Sales Person Information
                                    </h2>
                                    
                                    <label for="name" class="col-md-3 control-label req">Name</label>
                                    <div class="col-md-9 input-group">
                                        <span class="input-group-btn">
                                            <span class="s1icon s1icon-c-people"></span></span>
                                        <input id='name' type="text" label="Name" class="form-control reqData" placeholder="Name" />
                                    </div>
                                    
                                    
                                    <label for="salesId" class="col-md-3 control-label req">Sales ID</label>
                                    <div class="col-md-9 input-group">
                                        <span class="input-group-btn">
                                            <span class="s1icon s1icon-s-transcript"></span></span>
                                        <input id='salesId' type="text" label="Sales ID" class="form-control reqData" placeholder="Sales ID" />
                                    </div>
                                    
                                    <label for="phone" class="col-md-3 control-label req">Phone</label>
                                    <div class="col-md-9 input-group">
                                        <span class="input-group-btn">
                                            <span class="s1icon s1icon-c-smartphone"></span></span>
                                        <input id='phone' type="text" label="Phone" class="form-control reqData" placeholder="Phone" />
                                    </div>
                                    
                                    <label for="email" class="col-md-3 control-label">Email</label>
                                    <div class="col-md-9 input-group">
                                        <span class="input-group-btn">
                                            <span class="s1icon s1icon-c-envelope"></span></span>
                                        <input id='email' type="text" class="form-control" placeholder="Email"/>
                                    </div>
                                    
                                    
                                    
                                </section>
                                
                            </div>
                            <section class="section">
                                <h2 class="section-head">
                                    Customer Information
                                </h2>
                                
                                <label for="cFName" class="col-md-3 control-label req">Customer First Name</label>
                                <div class="col-md-9 input-group">
                                    <span class="input-group-btn">
                                        <span class="s1icon s1icon-c-people"></span></span>
                                    <input id='cFName' type="text" label="First Name" class="form-control reqData" placeholder="First Name" /> 
                                </div>
                                <label for="cLName" class="col-md-3 control-label req">Customer Last Name</label>
                                <div class="col-md-9 input-group">
                                    <span class="input-group-btn">
                                        <span class="s1icon s1icon-c-people"></span></span>
                                    <input id='cLName' type="text" label="Last Name" class="form-control reqData" placeholder="Last Name" /> 
                                </div>
                                <label for="cEmail" class="col-md-3 control-label req">Customer Email</label>
                                <div class="col-md-9 input-group">
                                    <span class="input-group-btn">
                                        <span class="s1icon s1icon-c-envelope"></span></span>
                                    <input id='cEmail' type="text" label="Email" class="form-control reqData" placeholder="Email" />
                                </div>
                                <label for="message" class="col-md-3 control-label">Custom Message</label>
                                <div class="col-md-9 input-group">
                                    <span class="input-group-btn">
                                        <span class="s1icon s1icon-s-note"></span></span>
                                    <textarea class="form-control" rows="4" id="message"></textarea>
                                </div>
                                
                                
                            </section>
                            
                            <section class="section">
                                <h2 class="section-head">
                                    Send Customer Email
                                </h2>
                                <button type="button" id="submit" class="btn btn-default" href="#" style="font-weight:normal" onclick="validate()">
                                    <span data-bind="label">Submit</span> 
                                </button>                                 
                            </section>
                            
                            
                            
                        </div><!---end main col--->
                    </div><!--end row1--->
                </div>
                
            </div><!---end container-->
        </body>
        <script>
        var $j = jQuery.noConflict();
        // Setup progress bar
        $j('.js-loading-bar').modal({
            backdrop: 'static',
            show: false
        }).on('shown.bs.modal', function( event ) {
            
            var bar = $j(event.target).find('.progress-bar'),
                _wait = function() {       
                    setTimeout(function() {
                        if ( bar.is(':visible')) { 
                            bar.addClass('animate');
                        } else {
                            console.log('not ready'); 
                            _wait();
                        }
                    }, 0);       
                };
            
            _wait();
            
        });
        $j('#info').click(function(){
            $j('#infoWell').toggleClass('hidden show')
            
        })
        $j('#submit').click(function() {
            var modal = $j('.js-loading-bar'),
                bar = modal.find('.progress-bar');
            
            modal.modal('show');
            
            setTimeout(function() {
                modal.modal('hide'); 
                bar.removeClass('animate');
                //$modal.modal('hide');        
            }, 3500);
        });
        
        $j('.add').click(function(){
            $j('.all').prop("checked",false);
            var items = $j("#prog1 input:checked:not('.all')");
            var n = items.length;
            if (n > 0) {
                items.each(function(idx,item){
                    var choice = $j(item);
                    choice.prop("checked",false);
                    choice.parent().appendTo("#prog2");
                });
            }
            else {
                alert("Choose an item from list 1");
            }
        });
        
        $j('.remove').click(function(){
            $j('.all').prop("checked",false);
            var items = $j("#prog2 input:checked:not('.all')");
            items.each(function(idx,item){
                var choice = $j(item);
                choice.prop("checked",false);
                choice.parent().appendTo("#prog1");
            });
        });
        
        /* toggle all checkboxes in group */
        $j('.all').click(function(e){
            e.stopPropagation();
            var $jthis = $j(this);
            if($jthis.is(":checked")) {
                $jthis.parents('.list-group').find("[type=checkbox]").prop("checked",true);
            }
            else {
                $jthis.parents('.list-group').find("[type=checkbox]").prop("checked",false);
                $jthis.prop("checked",false);
            }
        });
        
        $j('[type=checkbox]').click(function(e){
            e.stopPropagation();
        });
        
        /* toggle checkbox when list group item is clicked */
        $j('.list-group a').click(function(e){
            
            e.stopPropagation();
            
            var $jthis = $j(this).find("[type=checkbox]");
            if($jthis.is(":checked")) {
                $jthis.prop("checked",false);
            }
            else {
                $jthis.prop("checked",true);
            }
            
            if ($jthis.hasClass("all")) {
                $jthis.trigger('click');
            }
        });
        
        </script>
    </html>
</apex:page>