<apex:page showheader="false" sidebar="false" standardstylesheets="false" applyHtmlTag="false" applyBodyTag="false" doctype="html-5.0"
    controller="LiveAgentPreChatController">
    <html>

    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <apex:slds />
        <script type='text/javascript' src='{!liveagentJSEndpoint}/content/g/js/42.0/prechat.js'></script>
        <!-- This script takes the endpoint URL parameter passed from the deployment page and makes it the action for the form -->
        <script type='text/javascript'>
            (function () {
                function handlePageLoad() {
                    var endpointMatcher = new RegExp("[\\?\\&]endpoint=([^&#]*)");
                    document.getElementById('prechatForm').setAttribute('action',
                        decodeURIComponent(endpointMatcher.exec(document.location.search)[1]));
                }
                if (window.addEventListener) {
                    window.addEventListener('load', handlePageLoad, false);
                } else {
                    window.attachEvent('onload', handlePageLoad, false);
                }
            })();

            liveagent.details.preChatInit('{!liveagentAPIEndpoint}/chat', 'liveAgentPreChat.detailCallback');

            var liveAgentPreChat = function () {
                var contactId;
                var accountId;
                var wexAccountId;

                var firstName;
                var lastName;
                var fullName;
                var email;
                var phone;
                var wexAccount;
                var primaryReason;
                var otherReason;
                var reasonOtherMap = JSON.parse('{!reasonOtherMapStr}');
                var processCustomDetails = true;

                var detailCallback = function (details) {
                    if (processCustomDetails && details && details.customDetails) {
                        processCustomDetails = false;
                        for (var i = 0; i < details.customDetails.length; i++) {
                            if (details.customDetails[i].label === "FirstName") {
                                firstName = details.customDetails[i].value;
                            }
                            if (details.customDetails[i].label === "LastName") {
                                lastName = details.customDetails[i].value;
                            }
                            if (details.customDetails[i].label === "Email") {
                                email = details.customDetails[i].value;
                            }
                            if (details.customDetails[i].label === "Phone") {
                                phone = details.customDetails[i].value;
                            }
                            if (details.customDetails[i].label === "WexAccount") {
                                wexAccount = details.customDetails[i].value;
                            }
                        }

                        if (firstName && lastName) {
                            fullName = firstName + " " + lastName;
                        }

                        if (firstName && lastName && email) {
                            document.getElementById("spinner").classList.remove("slds-hide");

                            Visualforce.remoting.Manager.invokeAction(
                                'LiveAgentPreChatController.lookupContact',
                                firstName,
                                lastName,
                                email,
                                function (contact, event) {
                                    if (event.status) {
                                        document.getElementById("spinner").classList.add("slds-hide");
                                        if (contact) {
                                            contactId = contact.Id;
                                            accountId = contact.AccountId;
                                        }
                                    } else {
                                        console.log(event.message);
                                    }
                                }
                            );
                        }

                        if (wexAccount) {
                            document.getElementById("spinner").classList.remove("slds-hide");

                            Visualforce.remoting.Manager.invokeAction(
                                'LiveAgentPreChatController.lookupAccount',
                                wexAccount,
                                function (account, event) {
                                    if (event.status) {
                                        document.getElementById("spinner").classList.add("slds-hide");
                                        if (account) {
                                            wexAccountId = account.Id;
                                        }
                                    } else {
                                        console.log(event.message);
                                    }
                                }
                            );
                        }
                    }
                }

                function validateForm() {
                    var isValid = true;

                    var primaryReasonElem = document.getElementById("primaryReason");
                    primaryReason = primaryReasonElem.value;

                    var otherReasonElem = document.getElementById("otherReason");
                    otherReason = otherReasonElem.value;

                    var errDiv = document.querySelectorAll(".slds-has-error");
                    var i;
                    for (i = 0; i < errDiv.length; i++) {
                        errDiv[i].classList.remove("slds-has-error");
                    }
                    var errMsg = document.querySelectorAll(".slds-form-element__help");
                    for (i = 0; i < errMsg.length; i++) {
                        errMsg[i].parentNode.removeChild(errMsg[i]);
                    }

                    if (!primaryReason) {
                        showError(primaryReasonElem, "Required field.");
                        isValid = false;
                    }
                    else if (reasonOtherMap) {
                        if (reasonOtherMap[primaryReason] === true) {
                            if (!otherReason) {
                                showError(otherReasonElem, "Required field.");
                                isValid = false;
                            }
                        }
                    }

                    return isValid;
                }

                function showError(elem, msg) {
                    var span = document.createElement("span");
                    span.className = "slds-form-element__help";
                    span.innerHTML = msg;

                    var parentDiv = elem.parentNode.parentNode;
                    parentDiv.classList.add("slds-has-error");
                    parentDiv.insertBefore(span, null);
                }

                function showOtherReason(val) {
                    if (reasonOtherMap) {
                        if (reasonOtherMap[val] === true) {
                            document.getElementById("otherReasonDiv").classList.remove("slds-hide");
                            document.getElementById("otherReasonDiv").classList.add("slds-form-element");
                        } else {
                            document.getElementById("otherReasonDiv").classList.add("slds-hide");
                            document.getElementById("otherReasonDiv").classList.remove("slds-form-element");
                        }
                    }
                }

                function submitForm() {
                    var isValid = validateForm();
                    if (!isValid) {
                        return false;
                    }

                    var mapFields, createFields;

                    var caseRecordTypeId = "{!JSENCODE($Setup.Support_Operation_Settings__c.ServiceOperationsCaseRecordTypeID__c)}";
                    var caseDepartment = "{!JSENCODE(caseDepartment)}";

                    if (wexAccountId) {
                        accountId = wexAccountId;

                        addField("liveagent.prechat:AccountId", accountId);

                        mapFields = "Id,AccountId";
                        createFields = "Id,true;";

                        addField("liveagent.prechat.findorcreate.map:Account", mapFields);
                        addField("liveagent.prechat.findorcreate.map.doFind:Account", createFields);
                        addField("liveagent.prechat.findorcreate.map.isExactMatch:Account", createFields);
                        addField("liveagent.prechat.findorcreate.saveToTranscript:Account", "AccountId");
                    }

                    if (caseRecordTypeId) {
                        addField("liveagent.prechat:CaseRecordTypeId", caseRecordTypeId);
                    }

                    if (caseDepartment) {
                        addField("liveagent.prechat:CaseDepartment", caseDepartment);
                    }

                    mapFields = "Origin,CaseOrigin;Department__c,CaseDepartment;Subject,CaseSubject;Status,CaseStatus;Priority,CasePriority;RecordTypeId,CaseRecordTypeId;SuppliedName,CaseSuppliedName;SuppliedEmail,CaseSuppliedEmail;SuppliedPhone,CaseSuppliedPhone;Secondary_Reason__c,CasePrimaryReason;";
                    createFields = "Origin,true;Department__c,true;Subject,true;Status,true;Priority,true;RecordTypeId,true;SuppliedName,true;SuppliedEmail,true;SuppliedPhone,true;Secondary_Reason__c,true;";

                    addField("liveagent.prechat:CaseSuppliedName", fullName);
                    addField("liveagent.prechat:CaseSuppliedEmail", email);
                    addField("liveagent.prechat:CaseSuppliedPhone", phone);
                    addField("liveagent.prechat:CasePrimaryReason", primaryReason);
                    addField("liveagent.prechat.save:CasePrimaryReason", "Reason__c");

                    addField("liveagent.prechat:CaseOrigin", "Chat");
                    addField("liveagent.prechat:CaseStatus", "Working");
                    addField("liveagent.prechat:CasePriority", "Medium");
                    addField("liveagent.prechat:CaseSubject", "Chat Session");
                    addField("liveagent.prechat.name", fullName);

                    if (reasonOtherMap) {
                        if (reasonOtherMap[primaryReason] === true) {
                            addField("liveagent.prechat:CaseOtherReason", otherReason);
                            mapFields += "Detailed_Reason_Other__c,CaseOtherReason;";
                            createFields += "Detailed_Reason_Other__c,true;";
                            addField("liveagent.prechat.save:CaseOtherReason", "Detailed_Reason_Other__c");
                        }
                    }

                    if (contactId) {
                        addField("liveagent.prechat:CaseContactId", contactId);
                        mapFields += "ContactId,CaseContactId;";
                        createFields += "ContactId,true;";
                    }

                    if (accountId) {
                        addField("liveagent.prechat:CaseAccountId", accountId);
                        mapFields += "AccountId,CaseAccountId;";
                        createFields += "AccountId,true;";
                    }

                    addField("liveagent.prechat.findorcreate.map:Case", mapFields);
                    addField("liveagent.prechat.findorcreate.map.doCreate:Case", createFields);
                    addField("liveagent.prechat.findorcreate.showOnCreate:Case", "true");
                    addField("liveagent.prechat.findorcreate.saveToTranscript:Case", "CaseId");

                    document.forms[0].submit();
                }

                function addField(key, val) {
                    var hiddenField = document.createElement("input");
                    hiddenField.setAttribute("type", "hidden");
                    hiddenField.setAttribute("name", key);
                    hiddenField.setAttribute("value", val);

                    document.forms[0].appendChild(hiddenField);
                }

                return {
                    detailCallback: detailCallback,
                    showOtherReason: showOtherReason,
                    submitForm: submitForm
                };
            }();
        </script>
    </head>

    <body>
    
    
        <div class="slds-scope">
        <p class="slds-m-around--small slds-form-element__label">Welcome to the early adopter phase of Live Agent Chat.  Using chat will help us identify issues and enhancements before launch. Please remember to take the survey after the chat has ended. Thank you.</p>
            <form method="post" id="prechatForm" class="slds-form--stacked slds-size--1-of-1" novalidate="novalidate" onsubmit="liveAgentPreChat.submitForm(); return false;">
                <p class="slds-m-around--small slds-form-element__label">Please fill in the form below to start your chat.</p>
                <div id="primaryReasonDiv" class="slds-m-around--small slds-form-element slds-is-required">
                    <label class="slds-form-element__label" for="primaryReason">Reason</label>
                    <div class="slds-form-element__control">
                        <select id="primaryReason" class="slds-select" onchange="liveAgentPreChat.showOtherReason(this.value)">
                            <option value="" selected="selected"></option>
                            <apex:repeat value="{!reasonPicklistMap}" var="opt">
                                <option value="{!opt}">{!reasonPicklistMap[opt]}</option>
                            </apex:repeat>
                        </select>
                    </div>
                </div>

                <div id="otherReasonDiv" class="slds-m-around--small slds-form-element slds-is-required slds-hide">
                    <label class="slds-form-element__label" for="otherReason">Other Reason</label>
                    <div class="slds-form-element__control">
                        <input type="text" id="otherReason" maxlength="255" class="slds-input" placeholder="" />
                    </div>
                </div>

                <div class="slds-m-around--small slds-form-element">
                    <div class="slds-form-element__control">
                        <input type="button" onclick="liveAgentPreChat.submitForm();" value="Submit" class="slds-button slds-button--brand" id="prechat_submit"
                        />
                    </div>
                </div>
            </form>
            <div id="spinner" class="slds-spinner_container slds-hide">
                <div role="status" class="slds-spinner slds-spinner--medium slds-spinner--brand">
                    <div class="slds-spinner__dot-a"></div>
                    <div class="slds-spinner__dot-b"></div>
                </div>
            </div>
        </div>
    </body>

    </html>
</apex:page>